amigos<-as.character(herb_en_motif1[,2])#insects participando de motifs
####
###herbiv soja (L1)-parasitoid
parasitoides<-function(INT,k){
level.3<-NULL
por.fila<-length(INT[,1])
for(i in 1:por.fila){
if (INT[i,"lower.taxon"]==as.character(k)){
up.tax<- INT[i,"upper.taxon"]
level.3[i]<-as.character(up.tax)
}else{
level.3[i]<-"no"
}
}
return(level.3)
}
#function including parasitoides function (for each partner insect in soybea crop...)
total1<-function(INT,amigos){
final<-matrix(NA,nrow(INT),length(amigos))
for (j in 1:length(amigos)){ #para cada companero de soja
k<-amigos[j]
final[,j]<-parasitoides(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas<-total1(INT,amigos)####PARASITOIDES ASOCIADOS A LEPI1
View(matriz.compas)
colnames(matriz.compas)=amigos
matriz.compas ###
amigos2<-as.vector(matriz.compas)
amigos2.1<-unique(amigos2[amigos2!="no"])
L1.parasitoid<-NULL
aa<-ncol(matriz.compas)
i in 1:aa
i=1
bb<-cbind(as.character(INT[,"lower.taxon"]),matriz.compas[,i],INT[,"weight"])
View(bb)
matriz.compas[,i]
INT[,"weight"]
L1.para<-data.frame(bb)
colnames(L1.para)<-c("low.level","high.level","weight")
L1.para1<-data.frame(L1.para[L1.para[,2] != "no",])#me devuelve un subset de datos con las int
L1.parasitoid[[i]]<-L1.para1
for (i in 1:aa){
bb<-cbind(as.character(INT[,"lower.taxon"]),matriz.compas[,i],INT[,"weight"])
L1.para<-data.frame(bb)
colnames(L1.para)<-c("low.level","high.level","weight")
L1.para1<-data.frame(L1.para[L1.para[,2] != "no",])#me devuelve un subset de datos con las int
L1.parasitoid[[i]]<-L1.para1
}
L1.parasitoid
###lepidopterans-parasitoid
herb.borde<-function(INT,k){
level.2borde<-NULL
for(i in 1:length(INT[,1])){
if (INT[i,"upper.taxon"]==as.character(k)){
low.tax<- INT[i,"lower.taxon"]
level.2borde[i]<-as.character(low.tax)
}else{
level.2borde[i]<-"no"
}
}
return(level.2borde)
}
#function including planta.edge function (for each partner insect in soybea crop...)
total1<-function(INT,amigos2.1){
final<-matrix(NA,nrow(INT),length(amigos2.1))
for (j in 1:length(amigos2.1)){ #para cada companero de soja
k<-amigos2.1[j]
final[,j]<-herb.borde(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas2<-total1(INT,amigos2.1)
colnames(matriz.compas2)=amigos2.1
matriz.compas2####LEPI BORDE ASOCIADOS A PARASITOIDES
amigos2.1
matriz.compas2<-total1(INT,amigos2.1)
colnames(matriz.compas2)=amigos2.1
matriz.compas2####LEPI BORDE ASOCIADOS A PARASITOIDES
amigos3<-as.vector(matriz.compas2)
amigos3.1<-unique(amigos3[amigos3!="no"])
amigos3.1
as.vector(matriz.compas2)
matriz.compas2####LEPI BORDE ASOCIADOS A PARASITOIDES
Larvas.parasitoids<-NULL
bb<-ncol(matriz.compas2)
for (i in 1:bb){
l.p<-cbind(matriz.compas2[,i],as.character(INT[,"upper.taxon"]),INT[,"weight"])
Ls.paras<-data.frame(l.p)
colnames(Ls.paras)<-c("low.level","high.level","weight")
Ls.paras1<-data.frame(Ls.paras[Ls.paras[,1] != "no",])#me devuelve un subset de datos con las int
Larvas.parasitoids[[i]]<-Ls.paras1
}
Larvas.parasitoids
Larvas.parasitoids.final<-NULL
for (i in 1:length(Larvas.parasitoids)){
if (nrow(Larvas.parasitoids[[i]])>1){
Larvas.parasitoids.final[[i]]=Larvas.parasitoids[[i]]
}
}
Larvas.parasitoids.final
length(Larvas.parasitoids)
nrow(Larvas.parasitoids[[1]])>1
nrow(Larvas.parasitoids[[2]])>1
nrow(Larvas.parasitoids[[3]])>1
#function including planta.edge function (for each partner insect in soybea crop...)
total1<-function(INT,amigos3.1){
final<-matrix(NA,nrow(INT),length(amigos3.1))
for (j in 1:length(amigos3.1)){ #para cada companero de soja
k<-amigos3.1[j]
final[,j]<-planta.borde(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas3<-total1(INT,amigos3.1)###PLANTAS BORDES ASOCIADAS A LEPI2
###plants-lepidopterans
planta.borde<-function(INT,k){
level.1borde<-NULL
for(i in 1:length(INT[,1])){
if (INT[i,"upper.taxon"]==as.character(k)){
low.tax<- INT[i,"lower.taxon"]
level.1borde[i]<-as.character(low.tax)
}else{
level.1borde[i]<-"no"
}
}
return(level.1borde)
}
#function including planta.edge function (for each partner insect in soybea crop...)
total1<-function(INT,amigos3.1){
final<-matrix(NA,nrow(INT),length(amigos3.1))
for (j in 1:length(amigos3.1)){ #para cada companero de soja
k<-amigos3.1[j]
final[,j]<-planta.borde(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas3<-total1(INT,amigos3.1)###PLANTAS BORDES ASOCIADAS A LEPI2
colnames(matriz.compas3)=amigos3.1
matriz.compas3
matriz.compas3
1:ncol(matriz.compas3)
1:nrow(matriz.compas3)
1:nrow(matriz.compas3)
matriz.compas4<-matrix(0,nrow(matriz.compas3),ncol(matriz.compas3))
View(matriz.compas4)
matriz.compas4<-matrix(0,nrow(matriz.compas3),ncol(matriz.compas3))
for (i in 1:ncol(matriz.compas3)){
for(j in 1:nrow(matriz.compas3)){
if (as.character(matriz.compas3[j,i])=="pl1"){ #if "pl1" is true enter here
for(k in 1:nrow(matriz.compas3)){ ####I think that the problem is here. I need take a column with "pl1" and change !="pl1" by "no"
if (as.character(matriz.compas3[k,i])=="pl1"){
matriz.compas4[k,i]<-"soja"  #in the final version="pl1", I change names to check
}else{
matriz.compas4[k,i]<-"no es"#in the final version="no"
}
}
}else{
matriz.compas4[j,i]<-"idem" #in the final version=as.character(matriz.compas3[j,i])
}
}
}
pl_borde.larvas<-NULL
dd<-ncol(matriz.compas4)
matriz.compas4
matriz.compas3
matriz.compas4<-matrix(0,nrow(matriz.compas3),ncol(matriz.compas3))
for (i in 1:ncol(matriz.compas3)){
for(j in 1:nrow(matriz.compas3)){
if (as.character(matriz.compas3[j,i])=="pl1"){ #if "pl1" is true enter here
for(k in 1:nrow(matriz.compas3)){ ####I think that the problem is here. I need take a column with "pl1" and change !="pl1" by "no"
if (as.character(matriz.compas3[k,i])=="pl1"){
matriz.compas4[k,i]<-"soja"  #in the final version="pl1", I change names to check
}else{
matriz.compas4[k,i]<-"no es"#in the final version="no"
}
}
}else{
matriz.compas4[j,i]<-"no es" #in the final version=as.character(matriz.compas3[j,i])
}
}
}
matriz.compas4
matriz.compas3
matriz.compas3
matriz.compas3[1,12] <- "pl1"
matriz.compas3
matriz.compas3[1,12]
matriz.compas3[12,1] <- "pl1"
matriz.compas3
matriz.compas4<-matrix(0,nrow(matriz.compas3),ncol(matriz.compas3))
for (i in 1:ncol(matriz.compas3)){
for(j in 1:nrow(matriz.compas3)){
if (as.character(matriz.compas3[j,i])=="pl1"){ #if "pl1" is true enter here
for(k in 1:nrow(matriz.compas3)){ ####I think that the problem is here. I need take a column with "pl1" and change !="pl1" by "no"
if (as.character(matriz.compas3[k,i])=="pl1"){
matriz.compas4[k,i]<-"soja"  #in the final version="pl1", I change names to check
}else{
matriz.compas4[k,i]<-"no es"#in the final version="no"
}
}
}else{
matriz.compas4[j,i]<-"idem" #in the final version=as.character(matriz.compas3[j,i])
}
}
}
matriz.compas4
matriz.compas4
pl_borde.larvas<-NULL
dd<-ncol(matriz.compas4)
for (i in 1:dd){
pl.larv<-cbind(matriz.compas4[,i],as.character(INT[,"upper.taxon"]),INT[,"weight"])
pl.larv1<-data.frame(pl.larv)
colnames(pl.larv1)<-c("low.level","high.level","weight")
pl.larv2<-data.frame(pl.larv1[pl.larv1[,1] != "no",])#me devuelve un subset de datos con las int
pl_borde.larvas[[i]]<-pl.larv2
}
pl_borde.larvas
final_motifs<-c(pl_borde.larvas,Larvas.parasitoids.final)
View(final_motifs)
rm(list=ls())
planilla<-read.table("tabla_total28f.csv", sep=",",header=T)
#Selection by Field
by.field<-planilla[planilla$Field=="536",]###voy cambiando numero aca
#Selection of interaction type   #herbivory or pollination
INT<-by.field<-by.field[by.field$interaction_type=="pollination",]
head(INT)
####Interactions soybean-insects
polin<-function(INT){
level.superior<-NULL
for(i in 1:length(INT[,3])){
if (INT[i,"lower.taxon"]=="pl1"){
up.tax<- INT[i,"upper.taxon"]
level.superior[i]<-as.character(up.tax)
}else{
level.superior[i]<-"no"
}
}
return(level.superior)
}
poli_en_motif<-data.frame(polin(INT))
poli_en_motif2<-cbind(INT$lower.taxon, poli_en_motif,INT$weight)
poli_en_motif1<-data.frame(poli_en_motif2[poli_en_motif2$polin.INT != "no",])#me devuelve un subset de datos con las int
colnames(poli_en_motif1)<-c("low.level","high.level","weight")
poli_en_motif1
## Again, this could be shortened to this:
poli_en_motif_alt <- INT[INT$lower.taxon == "pl1",]
View(poli_en_motif_alt)
poli_en_motif_alt <- poli_en_motif_alt[c(2,3,7)]
poli_en_motif_alt
####Detecting plants from the edges that are participating on motif.
###Insect-plant from the edge
planta.edge<-function(INT,k){
level.inferior<-NULL
por.fila<-length(INT[,1])
for(i in 1:por.fila){
if (INT[i,"upper.taxon"]==as.character(k)){
low.tax<- INT[i,"lower.taxon"]
level.inferior[i]<-as.character(low.tax)
}else{
level.inferior[i]<-"no"
}
}
return(level.inferior)
}
#insects associated to soybean crop
amigos<-as.character(poli_en_motif1[,2])#insects participando de motifs
amigos
#function including planta.edge function (for each partner insect in soybea crop...)
total1<-function(INT,amigos){
filas<-nrow(INT)
columnas<-length(amigos)
final<-matrix(NA,filas,columnas)
uno.a.uno<-length(amigos)
for (j in 1:uno.a.uno){ #para cada companero de soja
k<-amigos[j]
final[,j]<-planta.edge(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas<-total1(INT,amigos)
colnames(matriz.compas)=amigos
matriz.compas
####Filtered list of interactions participating of motifs
ultimo<-function(matriz.compas,INT){
tabla.final<-NULL ###si en lugar de list me largaria una tablaaaaaa
n.columnas<-ncol(matriz.compas)
for (i in 1:n.columnas){
seleccionada<-data.frame(matriz.compas[,i])
subgrupo<-cbind(seleccionada,as.character(INT$upper.taxon),INT$weight)
subgrupo1<-subgrupo[subgrupo[,1] != "no",]
colnames(subgrupo1)<-c("low.level","high.level","weight")
tabla.final[[i]]<-subgrupo1
}
return(tabla.final)
}
listado_motifs<-ultimo(matriz.compas,INT)
listado_motifs
listado_motifs2<-NULL
elementos<-length(listado_motifs)
for (i in 1:elementos){
if (nrow(listado_motifs[[i]])>1){
listado_motifs2[[i]]=listado_motifs[[i]]
}
}
listado_motifs2
ncol(matriz.compas)
listado_motifs2
####
###herbiv soja (L1)-parasitoid
parasitoides<-function(INT,k){
level.3<-NULL
por.fila<-length(INT[,1])
for(i in 1:por.fila){
if (INT[i,"lower.taxon"]==as.character(k)){
up.tax<- INT[i,"upper.taxon"]
level.3[i]<-as.character(up.tax)
}else{
level.3[i]<-"no"
}
}
return(level.3)
}
final_motifs<-c(pl_borde.larvas,Larvas.parasitoids.final)
planilla<-read.table("tabla_total28f.csv", sep=",",header=T)
#by Field selection
by.field<-planilla[planilla$Field=="543",]###voy cambiando numero aca
#Select herbivoty + parasitoidism interations togheter
INT<-by.field[by.field$interaction_type=="herbivory" |  by.field$interaction_type=="parasitoidism",]
head(INT)
####Detecting soybean (pl1)-herbivore interactions
herbi.soja<-function(INT){
level.superior<-NULL
por.fila<-length(INT[,3])
for(i in 1:por.fila){
if (INT[i,"lower.taxon"]=="pl1"){
up.tax<- INT[i,"upper.taxon"]
level.superior[i]<-as.character(up.tax)
}else{
level.superior[i]<-"no"
}
}
return(level.superior)
}
herb_en_motif<-data.frame(herbi.soja(INT))
herb_en_motif2<-cbind(INT$lower.taxon, herb_en_motif,INT$weight)
herb_en_motif1<-data.frame(herb_en_motif2[herb_en_motif2$herbi.soja.INT != "no",])#me devuelve un subset de datos con las int
colnames(herb_en_motif1)<-c("low.level","high.level","weight")
herb_en_motif1 ##LEPI 1 ASOCIADOS A SOJA
## This could be shortened to this:
herb_en_motif_alt <- INT[INT$lower.taxon == "pl1",]
herb_en_motif_alt <- herb_en_motif_alt[c(2,3,7)]
####
###herbiv soja (L1)-parasitoid
parasitoides<-function(INT,k){
level.3<-NULL
por.fila<-length(INT[,1])
for(i in 1:por.fila){
if (INT[i,"lower.taxon"]==as.character(k)){
up.tax<- INT[i,"upper.taxon"]
level.3[i]<-as.character(up.tax)
}else{
level.3[i]<-"no"
}
}
return(level.3)
}
#insects associated to soybean crop
amigos<-as.character(herb_en_motif1[,2])#insects participando de motifs
#function including parasitoides function (for each partner insect in soybea crop...)
total1<-function(INT,amigos){
final<-matrix(NA,nrow(INT),length(amigos))
for (j in 1:length(amigos)){ #para cada companero de soja
k<-amigos[j]
final[,j]<-parasitoides(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas<-total1(INT,amigos)####PARASITOIDES ASOCIADOS A LEPI1
colnames(matriz.compas)=amigos
matriz.compas ###
amigos2<-as.vector(matriz.compas)
amigos2.1<-unique(amigos2[amigos2!="no"])
##para cada columna de matri.compas pegarle columna low y weght
L1.parasitoid<-NULL
aa<-ncol(matriz.compas)
for (i in 1:aa){
bb<-cbind(as.character(INT[,"lower.taxon"]),matriz.compas[,i],INT[,"weight"])
L1.para<-data.frame(bb)
colnames(L1.para)<-c("low.level","high.level","weight")
L1.para1<-data.frame(L1.para[L1.para[,2] != "no",])#me devuelve un subset de datos con las int
L1.parasitoid[[i]]<-L1.para1
}
L1.parasitoid
###lepidopterans-parasitoid
herb.borde<-function(INT,k){
level.2borde<-NULL
for(i in 1:length(INT[,1])){
if (INT[i,"upper.taxon"]==as.character(k)){
low.tax<- INT[i,"lower.taxon"]
level.2borde[i]<-as.character(low.tax)
}else{
level.2borde[i]<-"no"
}
}
return(level.2borde)
}
#function including planta.edge function (for each partner insect in soybea crop...)
total1<-function(INT,amigos2.1){
final<-matrix(NA,nrow(INT),length(amigos2.1))
for (j in 1:length(amigos2.1)){ #para cada companero de soja
k<-amigos2.1[j]
final[,j]<-herb.borde(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas2<-total1(INT,amigos2.1)
colnames(matriz.compas2)=amigos2.1
matriz.compas2####LEPI BORDE ASOCIADOS A PARASITOIDES
amigos3<-as.vector(matriz.compas2)
amigos3.1<-unique(amigos3[amigos3!="no"])
Larvas.parasitoids<-NULL
bb<-ncol(matriz.compas2)
for (i in 1:bb){
l.p<-cbind(matriz.compas2[,i],as.character(INT[,"upper.taxon"]),INT[,"weight"])
Ls.paras<-data.frame(l.p)
colnames(Ls.paras)<-c("low.level","high.level","weight")
Ls.paras1<-data.frame(Ls.paras[Ls.paras[,1] != "no",])#me devuelve un subset de datos con las int
Larvas.parasitoids[[i]]<-Ls.paras1
}
Larvas.parasitoids
Larvas.parasitoids.final<-NULL
for (i in 1:length(Larvas.parasitoids)){
if (nrow(Larvas.parasitoids[[i]])>1){
Larvas.parasitoids.final[[i]]=Larvas.parasitoids[[i]]
}
}
Larvas.parasitoids.final
#########################
###plants-lepidopterans
planta.borde<-function(INT,k){
level.1borde<-NULL
for(i in 1:length(INT[,1])){
if (INT[i,"upper.taxon"]==as.character(k)){
low.tax<- INT[i,"lower.taxon"]
level.1borde[i]<-as.character(low.tax)
}else{
level.1borde[i]<-"no"
}
}
return(level.1borde)
}
#function including planta.edge function (for each partner insect in soybea crop...)
total1<-function(INT,amigos3.1){
final<-matrix(NA,nrow(INT),length(amigos3.1))
for (j in 1:length(amigos3.1)){ #para cada companero de soja
k<-amigos3.1[j]
final[,j]<-planta.borde(INT,k)#busco sus plantas compa;eras de borde
}
return(final)
}
matriz.compas3<-total1(INT,amigos3.1)###PLANTAS BORDES ASOCIADAS A LEPI2
colnames(matriz.compas3)=amigos3.1
matriz.compas3
matriz.compas3[12,1] <- "pl1" # Testing the script below
###HELP HERE!!! I need to take each column of "matriz.compas3" and search for "pl1". If pl1=T take this column again
#and change all cells differents to "pl1" by "no". This works but stop in the first "pl1"
matriz.compas4<-matrix(0,nrow(matriz.compas3),ncol(matriz.compas3))
for (i in 1:ncol(matriz.compas3)){
for(j in 1:nrow(matriz.compas3)){
if (as.character(matriz.compas3[j,i])=="pl1"){ #if "pl1" is true enter here
for(k in 1:nrow(matriz.compas3)){ ####I think that the problem is here. I need take a column with "pl1" and change !="pl1" by "no"
if (as.character(matriz.compas3[k,i])=="pl1"){
matriz.compas4[k,i]<-"soja"  #in the final version="pl1", I change names to check
}else{
matriz.compas4[k,i]<-"no es"#in the final version="no"
}
}
}else{
matriz.compas4[j,i]<-"idem" #in the final version=as.character(matriz.compas3[j,i])
}
}
}
matriz.compas4
pl_borde.larvas<-NULL
dd<-ncol(matriz.compas4)
for (i in 1:dd){
pl.larv<-cbind(matriz.compas4[,i],as.character(INT[,"upper.taxon"]),INT[,"weight"])
pl.larv1<-data.frame(pl.larv)
colnames(pl.larv1)<-c("low.level","high.level","weight")
pl.larv2<-data.frame(pl.larv1[pl.larv1[,1] != "no",])#me devuelve un subset de datos con las int
pl_borde.larvas[[i]]<-pl.larv2
}
pl_borde.larvas
final_motifs<-c(pl_borde.larvas,Larvas.parasitoids.final)
####
###herbiv soja (L1)-parasitoid
parasitoides<-function(INT,k){
level.3<-NULL
por.fila<-length(INT[,1])
for(i in 1:por.fila){
if (INT[i,"lower.taxon"]==as.character(k)){
up.tax<- INT[i,"upper.taxon"]
level.3[i]<-as.character(up.tax)
}else{
level.3[i]<-"no"
}
}
return(level.3)
}
INT
